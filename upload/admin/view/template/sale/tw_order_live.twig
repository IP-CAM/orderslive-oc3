{{ header }}
{{ column_left }}
<div id="content">
    <nav class="navbar navbar-default">
        <div class="container-fluid">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#tw-orders-live-nav" aria-expanded="false">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                </button>
                <div class="navbar-brand">
                    <span id="tw-toggle-live"></span>LIVE! <span id="tw-live-version"> {{ constant('TW_ORDERS_LIVE_VERSION') }}</span>|
                    <span id="server-info">{{ text_connection }} <span id="server-status" class="label label-default">{{ status_unknown }}</span> </span>
                    <small id="tw-average-response-time" data-toggle="tooltip" title="{{ text_average_response_time }}"></small>
                </div>
            </div>
            <div class="collapse navbar-collapse" id="tw-orders-live-nav">
                <ul class="nav navbar-nav navbar-right" id="settings">
                    <li>
                        <form class="form-inline">
                            <div class="checkbox">
                                <label data-toggle="tooltip" title="{{ text_mute_info }}"><input id="tw-mute-sound" type="checkbox"> {{ text_mute }}</label>
                            </div>
                            <div class="form-group input-group input-group-sm">
                                <select class="form-control" id="tw-sound-select" data-toggle="tooltip" title="{{ text_sound_info }}">
                                    {% for sound_file in sound_files %}
                                        <option value="{{ sound_file.file }}">{{ sound_file.name }}</option>;
                                    {% endfor %}
                                </select>
                                <span class="input-group-btn">
                                    <button class="btn btn-default" id="sound-preview" data-toggle="tooltip" title="{{ text_play_sound }}" type="button"><i class="fa fa-play fa-lg"></i></button>
                                </span>
                            </div>
                        </form>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-3 col-md-2">
                <ul id="order-links" class="nav nav-pills nav-stacked" role="tablist">
                    <hr />
                    {% for tab in order_tabs %}
                        {{ tab }}
                    {% endfor %}
                </ul>
            </div>
            <div class="col-sm-9 col-md-10">
                <div id="order-details" class="tab-content">
                    {% for details in order_details %}
                        {{ details }}
                    {% endfor %}
                </div>
            </div>
        </div>
    </div>
</div>
<script src="view/javascript/tw/moment-with-locales.min.js" type="text/javascript"></script>
<script src="view/javascript/tw/tinysort.min.js" type="text/javascript"></script>
<script src="view/javascript/tw/jquery.tinysort.min.js" type="text/javascript"></script>
<script src="view/javascript/tw/js.cookie.min.js" type="text/javascript"></script>

<script>
	function flashMessage(message){
		let $message = $(message).prependTo('#content');
		setTimeout(function(){
			$message.fadeOut( 1000, function() {
				this.remove();
			});
		},3000)
	}

	//Server Status
	const ServerStatuses = Object.freeze({
	    UNKNOWN : 0,
		OK      : 1,
		ERROR   : 2,
		STOPPED : 3,
        title : {
            0 : '{{ status_unknown }}',
	        1 : '{{ status_ok }}',
	        2 : '{{ status_error }}',
	        3 : '{{ status_stopped }}'
	    },
		style :{
            0 : "label-default",
            1 : "label-success",
            2 : "label-danger",
			3 : "label-warning"
		}
	});

	class TwLiveConnectionStatus extends Object{
		constructor(element) {
			super();
			this.$el = $(element);
			this.status_id = ServerStatuses.UNKNOWN;
		}

		valueOf(){
			return this.status_id;
		}
		setStatus(status){
			this.status_id = status;
			this.$el.html(ServerStatuses.title[status]);
			this.$el.attr('class',"label "+ServerStatuses.style[status]);
		}
	}
	var connection_status = new TwLiveConnectionStatus('#server-status');

	class TwLiveSettings extends Object{
		constructor(element){
			super();
			this.$el = $(element);
			this.sound_dir = 'view/sounds/tw/tworderslive/';
			this.live_is_enabled = true;
			this.options = {
				sound_file : '',
				mute_sound : false
			};
			this.sound = '';
		}

		playNotification(force){
			if(!this.options.mute_sound || force === true) this.sound.play();
			return this;
		}

		toggleLive(){
			this.live_is_enabled = !this.live_is_enabled;
			connection_status.setStatus(ServerStatuses.STOPPED);
		}

		saveOptions(options){ // Save options in cookies
			if(!options) options = this.options;
			let expiration_date = new Date();
			expiration_date.setDate(expiration_date.getDate()+30);
			Cookies.set('tw_live_options',JSON.stringify(options),{ expires: expiration_date });
			return this;
		}
		loadOptions(){//Load options from cookies
			if(Cookies.get('tw_live_options')){
				this.options = JSON.parse(Cookies.get('tw_live_options'));
			}
			return this;
		}

		parseSettings(){
			this.options.mute_sound = this.$el.find('#tw-mute-sound').prop('checked');
			this.options.sound_file = this.$el.find('#tw-sound-select').val();
			this.sound = new Audio(this.sound_dir+this.options.sound_file);
			return this;
		}

		optionsToUi(){
			this.$el.find('#tw-mute-sound').prop('checked',this.options.mute_sound);
			this.$el.find('#tw-sound-select option[value="'+this.options.sound_file+'"]').prop('selected',true);
			return this;
		}
	}
	var settings = new TwLiveSettings('#settings');
	$(document).ready(function(){
		settings.loadOptions().saveOptions().optionsToUi().parseSettings();
	})

	$('#tw-toggle-live').click(function(){
		settings.toggleLive();
		if(settings.live_is_enabled) $(this).removeClass('disabled');
		else $(this).addClass('disabled');
	});

	$('#settings').change(function(e){
		settings.parseSettings().saveOptions();
	}).trigger('change');

	$('#sound-preview').click(function(e){
		e.preventDefault();
		settings.playNotification(true);
	});

    moment.locale("{{ locale }}");

	const user_token = '{{ user_token }}';
	var last_order_id = window.last_order_id ? window.last_order_id : 0;
    const api_token = '{{ api_token }}';


function addOrderHistory() {
		let btn = this;
		let order_id = $(this).data('id');
		let store_id = $(this).data('store-id');
		let form = $("#history-" + order_id + "-form");
		$.ajax({
			url: '{{ catalog }}index.php?route=api/order/history&api_token=' + api_token + '&store_id=' + store_id + '&order_id=' + order_id,
			type: 'post',
			dataType: 'json',
			data: 'order_status_id=' + encodeURIComponent(form.find('select[name=\'order_status_id\']').val()) + '&notify=' + (form.find('input[name=\'notify\']').prop('checked') ? 1 : 0) + '&override=' + (form.find('input[name=\'override\']').prop('checked') ? 1 : 0) + '&append=' +
			(form.find('input[name=\'append\']').prop('checked') ? 1 : 0) + '&comment=' + encodeURIComponent(form.find('textarea[name=\'comment\']').val()),
			beforeSend: function () {
				$(btn).button('loading');
			},
			complete: function () {
				$(btn).button('reset');
				refreshOrder(order_id);
			},
			success: function (json) {
				$('.alert').remove();

				if (json['error']) {
					flashMessage('<div class="alert alert-danger alert-flash"><i class="fa fa-exclamation-circle"></i> ' + json['error'] + ' <button type="button" class="close" data-dismiss="alert">&times;</button></div>');
				}

				if (json['success']) {
					flashMessage('<div class="alert alert-success alert-flash"><i class="fa fa-check-circle"></i> ' + json['success'] + ' <button type="button" class="close" data-dismiss="alert">&times;</button></div>');
				}
			}
		});
	}

    function addCustomerHistory() {
		let btn = this;
		let customer_id = $(this).data('id');
		let comment = $(btn).parent('.panel-body').find('[name="comment"]');
		if (comment.val() !== '') {
			$.ajax({
				url: 'index.php?route=customer/customer/addhistory&user_token={{ user_token }}&customer_id=' + customer_id,
				type: 'post',
				dataType: 'json',
				data: 'comment=' + encodeURIComponent(comment.val()),
				beforeSend: function () {
					$(btn).button('loading');
				},
				complete: function () {
					$(btn).button('reset');
				},
				success: function (json) {
					$('.alert').remove();

					if (json['error']) {
						flashMessage('<div class="alert alert-danger alert-flash"><i class="fa fa-exclamation-circle"></i> ' + json['error'] + ' <button type="button" class="close" data-dismiss="alert">&times;</button></div></div>');
					}

					if (json['success']) {
						flashMessage('<div class="alert alert-success alert-flash"><i class="fa fa-check-circle"></i> ' + json['success'] + ' <button type="button" class="close" data-dismiss="alert">&times;</button></div></div>');

						$('.history-' + customer_id).load('index.php?route=customer/customer/history&user_token={{ user_token }}&customer_id=' + customer_id);

						comment.val('');
					}
				}
			});
		}
	}

	function updateElapsed() {
		$('.time-elapsed').each(function () {
			let time = $(this).data('time');
			$(this).html(moment(time).fromNow());
		})
	}

	function refreshOrder(order_id) {
		$.ajax({
			url: 'index.php?route=sale/tw_live/refresh&user_token=' + user_token,
			method: "GET",
			data: {
				"order_id": order_id
			},
			success: function (r) {
				$(`#order-${order_id}`).replaceWith(r.order);
				$(`#order-${order_id}`).addClass("active");
				$(`#order-tab-${order_id}`).replaceWith(r.tab);
				$(`#order-tab-${order_id}`).attr("class", "active");
			},
			complete : updateElapsed
		})

	}

	$(document).on('click', 'a[href="#"]', function (e) {
		e.preventDefault();
	});
	var tw_live_response_total = 0;
	var tw_live_response_average = 0;
	var tw_live_request_count = 0;
	//Main script - Check for new orders ever 5 seconds
	setInterval(function () {
		let current_response_time = 0;
		let requestStart;
		if(settings.live_is_enabled){
			$.ajax({
				url: 'index.php?route=sale/tw_live/check&user_token=' + user_token,
				method: "GET",
				data: {
					"last_order_id": last_order_id
				},
				beforeSend : function(){
					requestStart = Date.now();
				},
				success: function (r) {
					tw_live_response_total += Date.now() - requestStart;
					tw_live_response_average = tw_live_response_total/++tw_live_request_count;
					$('#tw-average-response-time').html(Math.floor(tw_live_response_average) + "ms");

					for (let order of r.output) {
						if ($("#order-tab-" + order.order_id).length) {
							$("#order-tab-" + order.order_id).replaceWith(order.order_tab);
							$("#order-" + order.order_id).replaceWith(order.order_data);
						} else {
							$("#order-details").append(order.order_data);
							$("#order-links").prepend(order.order_tab);
						}
					}

					last_order_id = r.last_order_id > 0 ? r.last_order_id : last_order_id;

					if (r.order_count > 0) {
						settings.playNotification();
						updateElapsed();
					}
					if (connection_status != ServerStatuses.OK) {
						connection_status.setStatus(ServerStatuses.OK);
					}

				},
				error: function (xhr, ajaxOptions, thrownError) {
					$('#tw-average-response-time').html("No response");
					connection_status.setStatus(ServerStatuses.ERROR);
				},
				complete: function(){
					if(tw_live_request_count > 1500){ //Recalculate every 1500 requests
						tw_live_response_total = 0;
						tw_live_request_count = 0;
					}
					if(!settings.live_is_enabled){
						connection_status.setStatus(ServerStatuses.STOPPED);
					}
				}
			});
		}

	}, 5000);

	$(document).on('click', 'a[data-toggle="tab"]', function () {
		$(this).parent().removeClass('new');
	});

	$(document).on('click', '.refresh-order', function (e) {
		let order_id = $(this).data('order-id');
		refreshOrder(order_id);
	});

    var order_data_undo_array = [];

    function undo(e) {
        var evtobj = window.event? event : e;
        if (evtobj.keyCode == 90 && evtobj.ctrlKey){
            if(order_data_undo_array.length){
                let data = order_data_undo_array.pop();
                $("ul#order-links").append(data.link);
                $("#order-details").append(data.details);
                tinysort("ul#order-links>li",{order:'asc',selector:'a',attr:'href'})
            }
        }
    }
    document.onkeydown = undo;

    $(document).on('click', '.remove-order', function (e) {
        let order_id = $(this).data('order-id');
        let order_info = $("#order-"+order_id).remove();
        let order_tab = $("#order-tab-"+order_id).removeClass('active').remove();
        order_data_undo_array.push({
			'details'  : order_info,
	        'link'   :order_tab
        })
    });

	$('.history').delegate('.pagination a', 'click', function (e) {
		e.preventDefault();
		$(this).closest('.history').load(this.href);
	});

	$('#content').off('click', '.customer-history-add').on('click', '.customer-history-add', addCustomerHistory);
	$('#content').off('click', '.order-history-add').on('click', '.order-history-add', addOrderHistory);
	updateElapsed();
	setInterval(updateElapsed, 60000);
</script>
<style>
	.new {
		background: #b9fdb9;
	}
	#tw-toggle-live{
		width: 15px;
		height: 15px;
		border: 1px solid red;
		border-radius: 100%;
		animation: 2s live infinite;
		margin-right: 5px;
		display: inline-block;
		cursor: pointer;
	}
	#tw-toggle-live.disabled{
		animation:none;
		border-color: grey;
	}

	@keyframes live {
		0% {
			background : red;
			box-shadow: 0 0 4px 0px red;
		}
		25% {
			background: white;
			box-shadow: 0 0 0px 0px red;
		}
		100% {
			background: red;
			box-shadow: 0 0 4px 0px red;
		}
	}

	#tw-average-response-time{
		opacity: .8;
		font-weight: bold;
		font-size: 75%;
	}

	.alert.alert-flash {
		position: fixed;
		top: 3%;
		z-index: 1000;
		left: 5%;
		right: 5%;
	}
	span#tw-live-version {
		display: inline-block;
		position: relative;
		top: -10px;
		font-size: x-small;
		color: #80808096;
	}
</style>
{{ footer }}